install.packages("devtools")
install.packages("roxygen2")
devtools::create("stableisotopes")
install.packages("devtools")
install.packages("devtools")
install.packages("roxygen2")
devtools::create("stableisotopes")
TP1(150.5,148,0.0126,171.4)
TP1 <- function(Lp, Lp1, k, L.asym){
time = (Lp - Lp1)/(k*(L.asym-Lp1))
}
TP1(150.5,148,0.0126,171.4)
TP1 <- function(Lp, Lp1, k, L.asym){
time = (Lp - Lp1)/(k*(L.asym-Lp1))
time
}
TP1(150.5,148,0.0126,171.4)
LP1 <- function(L.ext, Time, k, L.asym){
section = format((L.ext - (Time*(k*L.asym)))/(1-(Time*k)), digits = 4, nsmall = 1)
paste(section, "mm", sep = "")
}
TP1(156.2,0,0.0126,171.4)
TP1(156.2,142.5,0.0126,171.4)
TP1(156.2,150.5,0.0126,171.4)
TP1(156.2,148,0.0126,171.4)
TP1(156.2,150.5, 0.0126,171.4)
TP1(150.5,148, 0.0126,171.4)
TP1(148.2,145.5, 0.0126,171.4)
TP1(145.5,142.5, 0.0126,171.4)
TP1(142.5,136.5, 0.0126,171.4)
TP1(136.5,129,0.0126,171.4)
a <- TP1(156.2,150.5, 0.0126,171.4)
b <- TP1(150.5,148, 0.0126,171.4)
c <- TP1(148.2,145.5, 0.0126,171.4)
d <- TP1(145.5,142.5, 0.0126,171.4)
e <- TP1(142.5,136.5, 0.0126,171.4)
f <- TP1(136.5,129,0.0126,171.4)
sum(a,b,c,d,e,f)
f <- TP1(156.2,129 ,0.0126,171.4)
f
a <- TP1(156.2,150.5, 0.0126,171.4)
b <- TP1(150.5,148, 0.0126,171.4)
c <- TP1(148.2,145.5, 0.0126,171.4)
d <- TP1(145.5,142.5, 0.0126,171.4)
e <- TP1(142.5,136.5, 0.0126,171.4)
f <- TP1(136.5,129,0.0126,171.4)
sum(a,b,c,d,e,f)
g <- TP1(156.2,129 ,0.0126,171.4)
g
a <- TP1(156.2,150.5, 0.0126,171.4)
b <- TP1(150.5,148, 0.0126,171.4)
c <- TP1(148.2,145.5, 0.0126,171.4)
d <- TP1(145.5,142.5, 0.0126,171.4)
e <- TP1(142.5,136.5, 0.0126,171.4)
f <- TP1(136.5,129,0.0126,171.4)
sum(a,b,c,d,e,f)
g
TP1(156.2,146.2 ,0.0126,171.4
TP1(156.2,146.2 ,0.0126,171.4
TP1(156.2,146.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(156.2,155.2 ,0.0126,171.4)
TP1(156.2,146.2 ,0.0126,171.4)
g <- TP1(156.2,0 ,0.0126,171.4)
g
TP1(156.2,151.2 ,0.0126,171.4)
TP1(146.2,141.2 ,0.0126,171.4)
TP1(141.2,136.2 ,0.0126,171.4)
TP1(131.2,126.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(146.2,141.2 ,0.0126,171.4)
TP1(141.2,136.2 ,0.0126,171.4)
TP1(131.2,126.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(151.2,146.2 ,0.0126,171.4)
TP1(146.2,141.2 ,0.0126,171.4)
TP1(141.2,136.2 ,0.0126,171.4)
TP1(156.2,146.2 ,0.0126,171.4)
TP1(146.2,136.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(156.2,146.2 ,0.0126,171.4)
TP1(156.2,141.2 ,0.0126,171.4)
TP1(156.2,136.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(156.2,146.2 ,0.0126,171.4)
TP1(156.2,141.2 ,0.0126,171.4)
TP1(156.2,136.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(166.2,161.2 ,0.0126,171.4)
TP1(156.2,151.2 ,0.0126,171.4)
TP1(166.2,161.2 ,0.0126,171.4)
TP1(146.2,141.2 ,0.0126,171.4)
LP1 <- function(L.ext, Time, k, L.asym){
section = format((L.ext - (Time*(k*L.asym)))/(1-(Time*k)), digits = 4, nsmall = 1)
paste(section, "mm", sep = "")
}
LP1(156.2,72, 0.0126, 171.4)
LP1(156.2,178, 0.0126, 171.4)
LP1(156.2,178, 0.0126, 171.4)
LP1(156.2,75, 0.0126, 171.4)
LP1(156.2,73, 0.0126, 171.4)
LP1(156.2,72, 0.0126, 171.4)
LP1(156.2,1, 0.0126, 171.4)
LP1(156.2,2, 0.0126, 171.4)
LP1(156.2,3, 0.0126, 171.4)
LP1(156.2,4, 0.0126, 171.4)
LP1(156.2,5, 0.0126, 171.4)
LP1(156.2,6, 0.0126, 171.4)
LP1(156.2,20, 0.0126, 171.4)
LP1(156.2,10, 0.0126, 171.4)
LP1(156.2,8, 0.0126, 171.4)
LP1(156.2,20, 0.0126, 171.4)
LP1(156.2,30, 0.0126, 171.4)
LP1(156.2,40, 0.0126, 171.4)
LP1(156.2,50, 0.0126, 171.4)
LP1(156.2,60, 0.0126, 171.4)
LP1(156.2,70, 0.0126, 171.4)
LP1(156.2,70, 0.0126, 171.4)
LP1(156.2,71, 0.0126, 171.4)
LP1(156.2,72, 0.0126, 171.4)
g <- TP1(156.2,0 ,0.0126,171.4)
g
LP1(156.2,72.326869, 0.0126, 171.4)
LP1(156.2,72.3268693, 0.0126, 171.4)
LP1(156.2,72.32, 0.0126, 171.4)
LP1(156.2,73, 0.0126, 171.4)
LP1(156.2,75, 0.0126, 171.4)
LP1(156.2,80, 0.0126, 171.4)
LP1(156.2,75, 0.0126, 171.4)
LP1(156.2,76, 0.0126, 171.4)
LP1(156.2,77, 0.0126, 171.4)
LP1(156.2,78, 0.0126, 171.4)
LP1(156.2,79, 0.0126, 171.4)
LP1(156.2,80, 0.0126, 171.4)
LP1(156.2,1, 0.0126, 171.4)
LP1(156.2,2, 0.0126, 171.4)
LP1(156.2,81, 0.0126, 171.4)
LP1(156.2,82, 0.0126, 171.4)
LP1(156.2,83, 0.0126, 171.4)
LP1(156.2,84, 0.0126, 171.4)
LP1(156.2,85, 0.0126, 171.4)
LP1(156.2,86, 0.0126, 171.4)
LP1(156.2,87, 0.0126, 171.4)
LP1(156.2,100, 0.0126, 171.4)
LP1(156.2,150, 0.0126, 171.4)
LP1(156.2,140, 0.0126, 171.4)
LP1(156.2,2000, 0.0126, 171.4)
LP1(156.2,20000, 0.0126, 171.4)
LP1(156.2,20000), 0.0126, 171.4)
LP1(156.2,200000, 0.0126, 171.4)
LP1(156.2,200000), 0.0126, 171.4)
LP1(156.2,20000000, 0.0126, 171.4)
LP1(156.2,75, 0.0126, 171.4)
g <- TP1(156.2,0 ,0.0126,171.4)
g
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
TP1(156.2,78.1 ,0.0126,171.4)
TP1(78.1, 0 ,0.0126,171.4)
exp(-0.0126*72)
171.4 * (1-(exp(-0.0126*72)))
171.4 * (1-(exp(-0.0126*178)))
171.4 * (1-(exp(-0.0126*179)))
171.4 * (1-(exp(-0.0126*190)))
171.4 * (1-(exp(-0.0126*200)))
171.4 * (1-(exp(-0.0126*195)))
171.4 * (1-(exp(-0.0126*190)))
exp^1
exp^2
(exp)
(exp(-1))
(exp(1))
(exp(1))
(exp+1)
(exp(2))
e^1
e^2
e
ln(exp)
log(exp)
exp(1)
exp(2)
1-exp
1-(exp)
(exp(2)
exp(2)
exp(2)
exp(3)
pi
pi +1
exp(0)
exp(1)
156.2*.01
(-log(1-156.2/171.4))/(0.0126)
# MaxTime uses simple Von Bertanlanffy model (growth function) to caclulate maximum theoretically time that sample represents
MaxTime <- function(L , L.asym, k){
(-log(1-L/L.asym))/(k)
}
MaxTime(156.2, 171.4, 0.0126)
MaxTime(171.4, 171.4, 0.0126)
MaxTime(171.3, 171.4, 0.0126)
MaxTime(156.2, 171.4, 0.0126)
# MaxTime uses simple Von Bertanlanffy model (growth function) to caclulate maximum theoretically time that the sample whisker represents
MaxTime <- function(L , L.asym, k){
Time = (-log(1-L/L.asym))/(k)
paste(Time, "days", sep = " ")
}
MaxTime(156.2, 171.4, 0.0126)
# MaxTime uses simple Von Bertanlanffy model (growth function) to caclulate maximum theoretically time that the sample whisker represents
MaxTime <- function(L , L.asym, k){
Time = format((-log(1-L/L.asym))/(k), digits = 4, nsmall = 1)
paste(Time, "days", sep = " ")
}
MaxTime(156.2, 171.4, 0.0126)
MaxTime(169.7, 171.4, 0.0126)
#TP1 calculates the time period that is represented based on a cut section
TP1 <- function(Lp, Lp1, k, L.asym){
time = format((Lp - Lp1)/(k*(L.asym-Lp1)), digits = 3, nsmall = 1)
paste(time, "days", sep = " ")
}
TP1(156.2, 148, 0.0126, 171.4)
#TP1 calculates the time period that is represented based on a cut section
TP1 <- function(Lp, Lp1, k, L.asym){
time = format((Lp - Lp1)/(k*(L.asym-Lp1)), digits = 4, nsmall = 1)
paste(time, "days", sep = " ")
}
TP1(156.2, 148, 0.0126, 171.4)
#TP1 calculates the time period that is represented based on a cut section
TP1 <- function(Lp, Lp1, k, L.asym){
time = format((Lp - Lp1)/(k*(L.asym-Lp1)), digits = 3, nsmall = 1)
paste(time, "days", sep = " ")
}
TP1(156.2, 148, 0.0126, 171.4)
#TP1 calculates the time period that is represented based on a cut section
TP1 <- function(Lp, Lp1, k, L.asym){
time = format((Lp - Lp1)/(k*(L.asym-Lp1)), digits = 3, nsmall = 0)
paste(time, "days", sep = " ")
}
TP1(156.2, 148, 0.0126, 171.4)
Intra.time <- function(L.int, L.asym, L){
time = format((L - L.int)/(k*(L.asym - L.int)), digits = 3, nsmall = 0)
}
Intra.time(5.3, 163.4, 127.8)
Intra.time(5.3, 163.4, 127.8, 0.0126)
Intra.time(5.3, 163.4, 127.8, 0.0126)
a.time
Intra.time <- function(L.int, L.asym, L, k){
time = format((L - L.int)/(k*(L.asym - L.int)), digits = 3, nsmall = 0)
}
Intra.time(5.3, 163.4, 127.8, 0.0126)
time
Intra.time <- function(L.int, L.asym, L, k){
time = format((L - L.int)/(k*(L.asym - L.int)), digits = 3, nsmall = 0)
time
}
Intra.time(5.3, 163.4, 127.8, 0.0126)
Intra.time <- function(L.int, L.asym, L, k){
time = format((L.int)/(k*(L.asym - (L - L.int))), digits = 3, nsmall = 0)
time
}
Intra.time(5.3, 163.4, 127.8, 0.0126)
paste(time, "days", sep = " ")
Intra.time <- function(L.int, L.asym, L, k){
time = format((L.int)/(k*(L.asym - (L - L.int))), digits = 3, nsmall = 0)
paste(time, "days", sep = " ")
}
Intra.time(5.3, 163.4, 127.8, 0.0126)
MaxTime(127.8, 163.4, 0.0126)
?k
?K
??k
??K
k
k
install.packages("devtools")
install.packages("roxygen2")
devtools::create("stableisotopes")
install.packages("devtools")
install.packages("devtools")
install.packages("roxygen2")
devtools::create("stableisotopes")
k(100,101,365)
k <- function(L, L.asym, Time){
k = format((-log(1-L/L.asym))/(Time), digits = 4, nsmall = 1)
}
k(100,101,365)
k(100,101,365)
k <- function(L, L.asym, Time){
k = format((-log(1-L/L.asym))/(Time), digits = 4, nsmall = 1)
k
}
k(100,101,365)
k(200,202,365)
k(200,202,200)
k(1000, 1010, 200)
k = format((-log(1-L/L.asym))/(Time), digits = 4)
k <- function(L, L.asym, Time){
k = format((-log(1-L/L.asym))/(Time), digits = 4)
k
}
k(1000, 1010, 365)
install.packages("devtools")
install.packages("roxygen2")
install.packages("devtools")
#install.packages("devtools")
#install.packages("roxygen2")
# devtools::create("whiskR")
devtools::document()
devtools::document()
devtools::document()
#' Calculate Segment Length
#'
#' This function allows you calculate where to cut to represent a specific time period.
#' @param L Length of the cut whisker
#' @param L.asym Asymptotic length of the whisker
#' @param Time Time period to be represented by the cut segment in days
#' @param k Growth coefficient, calculate using the function k
#' @keywords whisker segment
#' @export
#' @return Where to cut along the whisker
#' @examples
#' LP1(L=100, L.asym=150,Time=28 k=0.0126)
#'
LP1 <- function(L, L.asym, Time, k){
section = format((L - (Time*(k*L.asym)))/(1-(Time*k)), digits = 4, nsmall = 1)
paste(section, "mm", sep = "")
}
#' Calculate Time Represented by Segment
#'
#' This function allows you calculate how much time is represented by a sampled section of whisker.
#' @param L Length of the cut whisker
#' @param L.asym Asymptotic length of the whisker
#' @param LP1 Length of the whisker minus the cut sampled segment
#' @param k Growth coefficient, calculate using the function k
#' @keywords whisker segment
#' @export
#' @return Time represented by the sampled segment in days
#' @examples
#' TP1(L=100, L.asym=150, LP1=90, k=0.0126)
#'
TP1 <- function(L, L.asym, LP1, k){
Time = format((L - LP1)/(k*(L.asym-LP1)), digits = 3, nsmall = 0)
paste(Time, "days", sep = " ")
}
devtools::document()
library(roxygen2)
library(devtools)
library(roxygen2)
devtools::document()
a
a
