b <- section(150,170, 0.0126, 1)
View(b)
View(LP1)
#' @export
#' @author The function was written by Gary Truong with collaboration from Ben Walker
#' and Anna Lewis from the University of New South Wales
#' @references Hall-Aspland, S. A., Rogers, T. L., & Canfield, R. B. (2005). Stable carbon and nitrogen isotope
#' analysis reveals seasonal variation in the diet of leopard seals. Marine Ecology Progress Series, 305, 249-259.
#' @return The value returned is the location in millimetres, along the sample, to be cut to obtain a segment
#' representing the number of days indicated by the Time argument
#' @examples
#' LP1(L = 100, L.asym = 150, Time = 28, k = 0.0126)
#'
LP1 <- function(L, L.asym, Time, k){
section = format((L - (Time*(k*L.asym)))/(1-(Time*k)), digits, = 2, nsmall = 2)
as.numeric(section)
}
#' @export
#' @author The function was written by Gary Truong with collaboration from Ben Walker
#' and Anna Lewis from the University of New South Wales
#' @references Hall-Aspland, S. A., Rogers, T. L., & Canfield, R. B. (2005). Stable carbon and nitrogen isotope
#' analysis reveals seasonal variation in the diet of leopard seals. Marine Ecology Progress Series, 305, 249-259.
#' @return The value returned is the location in millimetres, along the sample, to be cut to obtain a segment
#' representing the number of days indicated by the Time argument
#' @examples
#' LP1(L = 100, L.asym = 150, Time = 28, k = 0.0126)
#'
LP1 <- function(L, L.asym, Time, k){
section = format((L - (Time*(k*L.asym)))/(1-(Time*k)), digits, = 2, nsmall = 2)
as.numeric(section)
}
#' @export
#' @author The function was written by Gary Truong with collaboration from Ben Walker
#' and Anna Lewis from the University of New South Wales
#' @references Hall-Aspland, S. A., Rogers, T. L., & Canfield, R. B. (2005). Stable carbon and nitrogen isotope
#' analysis reveals seasonal variation in the diet of leopard seals. Marine Ecology Progress Series, 305, 249-259.
#' @return The value returned is the location in millimetres, along the sample, to be cut to obtain a segment
#' representing the number of days indicated by the Time argument
#' @examples
#' LP1(L = 100, L.asym = 150, Time = 28, k = 0.0126)
#'
LP1 <- function(L, L.asym, Time, k){
section = format((L - (Time*(k*L.asym)))/(1-(Time*k)), digits = 2, nsmall = 2)
as.numeric(section)
}
b <- section(150,170, 0.0126, 1)
View(b)
b <- section(150,170, 0.0126, 7)
View(b)
?TP1
TP1(150, 170, 148, 0.0126)
TP1(150, 170, 148.07, 0.0126)
TP1(150, 170, 148.14360, 0.0126)
str(TP1(150, 170, 148.14360, 0.0126))
str(TP1(1.66, 170, 0, 0.0126))
str(TP1(2.76, 170, 0, 0.0126))
#' @keywords whisker segment time von-Bertanlanffy
#' @export
#' @author The function was written by Gary Truong with collaboration from Ben Walker
#' and Anna Lewis from the University of New South Wales
#' @references Hall-Aspland, S. A., Rogers, T. L., & Canfield, R. B. (2005). Stable carbon and nitrogen isotope
#' analysis reveals seasonal variation in the diet of leopard seals. Marine Ecology Progress Series, 305, 249-259.
#' @return The value returned is the number of days represented by the cut segment.
#' @examples
#' TP1(L = 100, L.asym = 150, LP1 = 90, k = 0.0126)
#'
TP1 <- function(L, L.asym, LP1, k){
time = format((L - LP1)/(k*(L.asym-LP1)), digits = 2, nsmall = 1)
as.numeric(time)
}
str(TP1(2.76, 170, 0, 0.0126))
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = TP1(out[[3]][i+1], L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 7)
View(b)
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = 0.5
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 7)
b <- section(150,170, 0.0126, 1)
View(b)
c <- section1(150,170, 0.0126, 1, "2006/06/22")
View(c)
View(c)
str(TP1(1.63, 170, 0, 0.0126))
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = TP1(1.63, 170, 0, 0.0126)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 1)
View(b)
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = TP1(1.63, L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 1)
View(b)
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = TP1(out[[3]][i], L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 1)
View(b)
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = TP1(a, L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 1)
View(b)
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = 1 - TP1(a, L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
section <- function(L, L.asym, k, Time = 1, date = "1900/01/01"){
out <- list(0)
name <- value <- L.start <- L.end <- NULL
a <- as.numeric(LP1(L, L.asym, Time, k))
out[1] = a
out[2] = Time
out[3] = L
out[4] = lubridate::as_date(date)
out[[3]][2] = a
for(i in 1:1000){
if(a > 0 & a < L){
a <- as.numeric(out[[1]][i]) %>%
LP1(L.asym, Time, k)
out[[1]][i+1] = a
out[[2]][i+1] = Time
out[[3]][i+2] = a
out[[4]][i+1] = lubridate::as_date(date) - Time*i
}
else if(a <0){
out[[1]][i] = 0
out[[2]][i] = 1 + TP1(a, L.asym, 0, k)
out[[4]][i] = lubridate::as_date(date) - Time*(i-1)
}
else{
stop
}
}
x <- tibble::enframe(as.numeric(out[[3]])) %>%
dplyr::select(name, L.start = value)
y <- tibble::enframe(as.numeric(out[[2]])) %>%
dplyr::select(name, time = value)
z <- tibble::enframe(as.numeric(out[[1]])) %>%
dplyr::select(name,L.end = value)
w <- tibble::enframe(lubridate::as_date(out[[4]])) %>%
dplyr::select(name, date = value)
x %>% dplyr::left_join(z, by = "name") %>%
dplyr::left_join(y, by = "name") %>%
dplyr::left_join(w, by = "name") %>%
dplyr::filter(L.start > 0) %>%
dplyr::mutate(SectionLength = L.start-L.end) %>%
dplyr::mutate(CumulativeLength = cumsum(SectionLength))
}
b <- section(150,170, 0.0126, 1)
View(b)
b <- section(140,170, 0.0126, 1)
View(b)
b <- section(166,170, 0.0126, 1)
View(b)
b <- section(168,170, 0.0126, 1)
View(b)
b <- section(169,170, 0.0126, 1)
View(b)
b <- section(169.9,170, 0.0126, 1)
View(b)
b <- section(169.5,170, 0.0126, 1)
View(b)
c <- section(169.5,170, 0.0126, 1)
devtools::document()
devtools::document()
LP1 = NULL
TP1 = NULL
rm(TP1)
rm(LP1)
rm(section)
devtools::document()
## running R CMD check through devtools
devtools::check()
devtools::document()
## running R CMD check through devtools
devtools::check()
install.packages("Rtools")
## running R CMD check through devtools
devtools::check()
install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/",
...)
install.packages("installr")
install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/",
...)
installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/",
...)
installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
library(Rtools)
#install.packages("devtools")
#install.packages("roxygen2")
#install.packages("usethis")
devtools::install_github("r-lib/pkgdown")
install.packages("Rtools")
install.packages("installr")
installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
install.packages("installr")
#install.packages("devtools")
#install.packages("roxygen2")
#install.packages("usethis")
devtools::install_github("r-lib/pkgdown")
install.packages("Rtools")
# install.packages("installr")
installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
#install.packages("devtools")
#install.packages("roxygen2")
#install.packages("usethis")
devtools::install_github("r-lib/pkgdown")
install.packages("Rtools")
# install.packages("installr")
#installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
#install.packages("devtools")
#install.packages("roxygen2")
#install.packages("usethis")
devtools::install_github("r-lib/pkgdown")
install.packages("Rtools")
# install.packages("installr")
#installr::install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,  page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
library(magrittr)
library(devtools)
library(roxygen2)
library(tidyverse)
library(pkgdown)
devtools::install_github("GaryTruong/whiskR")
library(whiskR)
# devtools::create("whiskR")
## running R CMD check through devtools
devtools::check()
